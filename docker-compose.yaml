services:
  # Servizio Zookeeper aggiornato
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - my_network

  # Servizio Kafka aggiornato
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - my_network

  # Servizio DataCollector
  datacollector_service:
    build: ./datacollector_service
    container_name: datacollector_service
    ports:
      - "5004:5004"
    depends_on:
      - database
    networks:
      - my_network
    environment:
      DB_HOST: mysql_db
      DB_USER: root
      DB_PASSWORD: example
      DB_NAME: finance_data

  # Servizio StockService
  stock_service:
    build: ./stock_service
    container_name: stock_service
    ports:
      - "5002:5002"
    depends_on:
      - database
    networks:
      - my_network

  # Servizio Redis
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my_network

  # Servizio Proxy
  proxy_service:
    build: ./proxy_service
    container_name: proxy_service
    ports:
      - "5005:5005"
    depends_on:
      - redis
      - auth_service
    networks:
      - my_network

  # Servizio Promethues
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - my_network

  # Servizio AuthService
  auth_service:
    build: ./auth_service
    container_name: auth_service
    ports:
      - "5001:5001"
    depends_on:
      - database
      - kafka
    networks:
      - my_network

  # Servizio AlertSystem
  alertsystem_service:
    build: ./alertsystem_service
    container_name: alertsystem_service
    environment:
      - KAFKA_BROKER=kafka:9092
      - DB_HOST=mysql_db
      - DB_USER=root
      - DB_PASSWORD=example
      - DB_NAME=finance_data
    depends_on:
      - kafka
      - database
    networks:
      - my_network

  # Servizio AlertNotifierService
  alertnotifier_service:
    build: ./alertnotifier_service
    container_name: alertnotifier_service
    environment:
      - KAFKA_BROKER=kafka:9092
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=rochytrush@gmail.com
      - SMTP_PASSWORD=ohel oaxc dpyn jndu
    depends_on:
      - kafka
    networks:
      - my_network

  # Servizio Database MySQL
  database:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: finance_data
    ports:
      - "3306:3306"
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my_network

networks:
  my_network: